# Usage:
#   export LINODE_API_KEY=4kfjh59shlhdkjhksdj00sdsTTsskklkjoiRPrbDtgHY
#   ansible-playbook --extra-vars server_hostname=hades provision-server.yml
#
- name: Provision new linode
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
  - vars/conf.yml
  - vars/secrets.yml

  tasks:
  - name: Fail if server_hostname is not defined
    fail: msg="server_hostname needs to be defined via commandline, e.g. --extra-vars server_hostname=flower"
    when: server_hostname is not defined

  - name: Create linode server via Linode API
    # http://docs.ansible.com/ansible/linode_module.html
    linode:
      name: "{{ server_hostname }}"
      api_key: "{{ linode_api_key }}"
      plan: "{{ linode_plan }}"
      datacenter: "{{ linode_datacenter }}"
      distribution: "{{ linode_distribution }}"
      ssh_pub_key: "{{ root_ssh_pub_key }}"
      swap: "{{ linode_swap }}"
      wait: yes
      wait_timeout: 600
      state: present
    register: linode

  - name: Show me the registered linode
    debug: var=linode

  - name: Add new host to in-memory inventory
    add_host:
      hostname: "{{ linode.instance.ipv4 }}"
      groupname: "linode"

  - name: Wait for Linode to listen on port 22
    wait_for:
      state: started
      host: "{{ linode.instance.ipv4 }}"
      port: 22

  - cloudflare_dns:
      zone: "{{ server_domain }}"
      record: "{{ server_hostname }}"
      type: A
      value: "{{ linode.instance.ipv4 }}"
      account_email: "{{ cloudflare_email }}"
      account_api_token: "{{ cloudflare_api_key }}"
    register: record

- name: Common configuration on the new server
  hosts: linode
  user: root

  vars_files:
    - vars/conf.yml
  vars:
    server_fqdn: "{{ server_hostname }}.{{ server_domain }}"

  tasks:
    - name: set hostname
      hostname: name="{{ server_hostname }}"

    - name: set FQDN
      lineinfile:
        dest=/etc/hosts
        regexp='{{ item }}$'
        line="{{ item }} {{ server_fqdn }} {{ server_hostname }}"
        state=present
      with_items: groups['linode']

    - name: ssh key only
      copy: src=files/ssh/sshd_config dest=/etc/ssh/sshd_config
      notify: restart ssh

  handlers:
    - name: restart ssh
      service: name=sshd state=restarted

- include: deployuser.yml
  vars:
    var_hosts: linode

- include: epelit.yml
  vars:
    var_hosts: linode
